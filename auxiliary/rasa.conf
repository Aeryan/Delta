server {
    listen 80;
#    server_name 193.40.154.148;
    server_name deltabot.tartunlp.ai;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    root /home/ubuntu/Rasa/;
#    index front.html;
    server_name deltabot.tartunlp.ai;
    ssl_certificate /etc/letsencrypt/live/deltabot.tartunlp.ai/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/deltabot.tartunlp.ai/privkey.pem;
    keepalive_timeout 30;

    location ~ /(e\w)/?$ {
        try_files /Delta_$1/auxiliary/static/front.html =404;
    }
    location ~ /(e\w)/changelogs/?$ {
        try_files /Delta_$1/auxiliary/static/changelogs.html =404;
    }
    location ~ /(e\w)/front.js$ {
        try_files /Delta_$1/auxiliary/static/front.js =404;
    }

    # Reverse proxy to the Rasa server with api enabled (default port 5005)
    # Solution adapted from https://serverfault.com/a/312114
    location /en/webhook {
        proxy_pass      http://localhost:5005/webhooks/rest/webhook;
        proxy_redirect  http://localhost:5005/webhooks/rest/webhook/ /;
        proxy_read_timeout 60s;

        # Non-POST-requests to /webhook are unnecessary and crash the logging server
        limit_except POST {
            deny all;
        }

        proxy_set_header          Host            $host;
        proxy_set_header          X-Real-IP       $remote_addr;
        proxy_set_header          X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    # et configured on 6005
    location /et/webhook {
        proxy_pass      http://localhost:6005/webhooks/rest/webhook;
        proxy_redirect  http://localhost:6005/webhooks/rest/webhook/ /;
        proxy_read_timeout 60s;

        # Non-POST-requests to /webhook are unnecessary and crash the logging server
        limit_except POST {
            deny all;
        }

        proxy_set_header          Host            $host;
        proxy_set_header          X-Real-IP       $remote_addr;
        proxy_set_header          X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /media/ {
        autoindex on;
    }

    location = / {
        return 301 /en$uri;
    }
}
